<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaoyu.mapper.TasksMapper">

    <!-- 1. 主结果映射 -->
    <resultMap id="GetTasksVOMap" type="com.xiaoyu.vo.task.GetTasksVO">
        <id property="id" column="task_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="reward" column="reward"/>
        <result property="status" column="status"/>
        <result property="visibility" column="visibility"/>
        <result property="expireAt" column="expire_at"/>
        <result property="createdAt" column="created_at"/>

        <!-- 1.1 发布者 -->
        <association property="publisher" javaType="com.xiaoyu.vo.task.GetTasksVO$PublisherVO">
            <id property="id" column="pub_id"/>
            <result property="nickname" column="pub_nickname"/>
            <result property="avatarUrl" column="pub_avatar"/>
        </association>

        <!-- 1.2 统计 -->
        <association property="stats" javaType="com.xiaoyu.vo.task.GetTasksVO$StatsVO">
            <result property="viewCnt" column="view_cnt"/>
            <result property="orderCnt" column="order_cnt"/>
        </association>

        <!-- 1.3 文件列表 -->
        <collection property="files" ofType="com.xiaoyu.vo.task.GetTasksVO$FileItemVO">
            <id property="id" column="file_id"/>
            <result property="thumbUrl" column="thumb_url"/>
            <result property="fileUrl" column="file_url"/>
            <result property="size" column="file_size"/>
        </collection>

        <!-- 1.4 标签列表 -->
        <collection property="tags" ofType="com.xiaoyu.vo.task.GetTasksVO$TagItemVO">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
        </collection>
    </resultMap>

    <!-- 2. 主查询（支持分页） -->
    <select id="getTasks" resultMap="GetTasksVOMap" parameterType="java.lang.Long">
        SELECT
        t.id          AS task_id,
        t.title,
        t.content,
        t.reward,
        t.status,
        t.visibility,
        t.expire_at,
        t.created_at,

        u.id          AS pub_id,
        u.nickname    AS pub_nickname,
        u.avatar_url  AS pub_avatar,

        s.view_cnt,
        s.order_cnt,

        f.id          AS file_id,
        f.thumb_url,

        tg.id         AS tag_id,
        tg.name       AS tag_name

        FROM tasks t
        INNER JOIN users u ON u.id = t.publisher_id
        LEFT JOIN task_stats s ON s.task_id = t.id
        LEFT JOIN task_files tf ON tf.task_id = t.id
        LEFT JOIN files f ON f.id = tf.file_id
        LEFT JOIN tag_items ti ON ti.item_id = t.id
        LEFT JOIN tags tg ON tg.id = ti.tag_id

        <where>
            <if test="keyword != null and keyword != ''">AND (t.title LIKE CONCAT('%',#{keyword},'%') OR t.content LIKE CONCAT('%',#{keyword},'%'))</if>
            <if test="status != null">AND t.status = #{status}</if>
            <if test="tagId != null">AND tg.id = #{tagId}</if>
            <if test="userId != null">AND u.id=#{userId}</if>
        </where>

        GROUP BY t.id, f.id, tg.id   <!-- 去重聚合 -->
        ORDER BY t.created_at DESC
    </select>


    <select id="getReceivedTasks" resultMap="GetTasksVOMap" parameterType="java.lang.Long">
        SELECT
        t.id          AS task_id,
        t.title,
        t.content,
        t.reward,
        t.status,
        t.visibility,
        t.expire_at,
        t.created_at,

        u.id          AS pub_id,
        u.nickname    AS pub_nickname,
        u.avatar_url  AS pub_avatar,

        s.view_cnt,
        s.order_cnt,

        f.id          AS file_id,
        f.thumb_url,

        tg.id         AS tag_id,
        tg.name       AS tag_name

        FROM tasks t
        INNER JOIN task_orders o ON o.task_id = t.id
        INNER JOIN users u ON u.id = o.receiver_id
        LEFT JOIN task_stats s ON s.task_id = t.id
        LEFT JOIN task_files tf ON tf.task_id = t.id
        LEFT JOIN files f ON f.id = tf.file_id
        LEFT JOIN tag_items ti ON ti.item_id = t.id
        LEFT JOIN tags tg ON tg.id = ti.tag_id

        <where>
            <if test="userId != null">AND o.receiver_id=#{userId}</if>
        </where>

        GROUP BY t.id, u.id, s.view_cnt, s.order_cnt, f.id, tg.id   -- 3. 全列 GROUP BY
        ORDER BY t.created_at DESC, t.id DESC

    </select>
    <select id="getTask" resultMap="GetTasksVOMap" parameterType="java.lang.Long">
        SELECT
        t.id          AS task_id,
        t.title,
        t.content,
        t.reward,
        t.status,
        t.visibility,
        t.expire_at,
        t.created_at,

        u.id          AS pub_id,
        u.nickname    AS pub_nickname,
        u.avatar_url  AS pub_avatar,

        s.view_cnt,
        s.order_cnt,

        f.id          AS file_id,
        f.thumb_url,
        f.file_url,
        f.size,

        tg.id         AS tag_id,
        tg.name       AS tag_name

        FROM tasks t
        INNER JOIN task_orders o ON o.task_id = t.id
        INNER JOIN users u ON u.id = o.receiver_id
        LEFT JOIN task_stats s ON s.task_id = t.id
        LEFT JOIN task_files tf ON tf.task_id = t.id
        LEFT JOIN files f ON f.id = tf.file_id
        LEFT JOIN tag_items ti ON ti.item_id = t.id
        LEFT JOIN tags tg ON tg.id = ti.tag_id

        <where>
            <if test="userId != null">AND o.receiver_id=#{userId}</if>
        </where>

        GROUP BY t.id, u.id, s.view_cnt, s.order_cnt, f.id, tg.id   -- 3. 全列 GROUP BY
        ORDER BY t.created_at DESC, t.id DESC
    </select>

</mapper>